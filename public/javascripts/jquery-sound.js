/*  * required: jquery.swf.js, jquery.swf.swf */	 (function() {jQuery.sound = function(sound_name, mp3, autoplay, methods){	return new jQuery.sound.fn.init( sound_name, mp3, autoplay);};jQuery.sound.fn = jQuery.sound.prototype = {	exists: false,	names: {},	positions: {},	init: function(name){				if(!jQuery.sound.fn.swf) jQuery.sound.fn.swf = jQuery.swf( $("<div></div>").appendTo("body").css({position: "absolute", top: -500, left: -500}) );				if(name) jQuery.sound.fn.name = this.name = name;		var self = this;				jQuery.sound.fn.swf.ready(function(){			if(!jQuery.sound.fn.names[self.name]) jQuery.sound.fn.swf.obj(self.name, "Sound");			jQuery.sound.fn.names[self.name] = name;		});				return this;	},	play: function(position){		if(!this.positions[this.name]) this.positions[this.name] = 0;		this.pause();		this.swf.obj(this.name).call("start", this.positions[this.name]/1000);		return this;	},	stop: function(){		this.positions[this.name] = 0;		this.swf.obj(this.name).call("stop");		return this;	},	pause: function(){		this.positions[this.name] = this.swf.obj(this.name).get("position");		this.swf.obj(this.name).call("stop");	},	position: function(){		return this.swf.obj(this.name).get("position");	},	load: function(mp3, autoplay){		var self = this;		if(jQuery.isFunction(mp3)){				}		self.swf.ready(function(i){			self.swf.obj(self.name).call("loadSound", mp3, autoplay);		})		return self;	},	onload: function(func){		var self = this;		if(this.position()) func(this);		else window.setTimeout(function(){ self.onload(func) }, 100);		return this;	}}jQuery.sound.fn.init.prototype = jQuery.sound.fn;})();